name: Ruby Testing
on:
  pull_request:
  push:
    branches:
    - master
env:
  RAILS_ENV: test
  DATABASE_URL: postgresql://postgres:@localhost/test
  DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL: true
jobs:
  rubocop:
    runs-on: ubuntu-latest
    env:
      BUNDLE_FOREMAN: '0'
      BUNDLE_WITHOUT: development:test
    steps:
      - uses: actions/checkout@v2
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.5
          bundler-cache: true
      - name: Run rubocop
        run: bundle exec rubocop -P --format github
  view_specs:
    runs-on: ubuntu-latest
    env:
      working-directory: './foreman_puppet_enc'
      BUNDLE_WITHOUT: journald:development:console:libvirt
    needs: rubocop
    services:
      postgres:
        image: postgres:12.1
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - run: sudo apt-get install build-essential libcurl4-openssl-dev zlib1g-dev libpq-dev
      - uses: actions/checkout@v2
        with:
          repository: ezr-ondrej/foreman
          ref: plugin_base_rake
          path: foreman
      - uses: actions/checkout@v2
        with:
          path: foreman_puppet_enc
      - name: Setup Bundler
        working-directory: ${{env.working-directory}}
        run: |
          echo "gem 'foreman_puppet_enc', path: '../foreman_puppet_enc'" > ../foreman/bundler.d/foreman_puppet_enc.local.rb
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.5
          bundler-cache: true
          working-directory: ${{env.working-directory}}
      - name: Prepare test env
        if: github.event_name != 'push'
        working-directory: ${{env.working-directory}}
        run: |
          bundle exec rake app:db:create
          bundle exec rake app:db:migrate
      - name: Run view specs
        if: github.event_name != 'push'
        working-directory: ${{env.working-directory}}
        run: bundle exec rake spec
  test_ruby:
    runs-on: ubuntu-latest
    needs: rubocop
    env:
      BUNDLE_WITHOUT: journald:development:console:libvirt
    services:
      postgres:
        image: postgres:12.1
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    strategy:
      fail-fast: true
      matrix:
        foreman-core-branch: [hostgroup_facet-tempate_input]
        ruby-version: [2.5, 2.6]
        node-version: [12]
    steps:
      - run: sudo apt-get install build-essential libcurl4-openssl-dev zlib1g-dev libpq-dev
      - name: Install chromedriver
        uses: nanasess/setup-chromedriver@master
      - uses: actions/checkout@v2
        with:
          repository: ezr-ondrej/foreman
          ref: ${{ matrix.foreman-core-branch }}
      - uses: actions/checkout@v2
        with:
          path: foreman_puppet_enc
      - name: Setup Bundler
        run: |
          echo "gem 'foreman_puppet_enc', path: './foreman_puppet_enc'" > bundler.d/foreman_puppet_enc.local.rb
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true
      - name: Setup Node
        if: github.event_name != 'push'
        uses: actions/setup-node@v1
        with:
          node-version:  ${{ matrix.node-version }}
      - name: Prepare test DB
        if: github.event_name != 'push'
        run: |
          bundle exec rake db:create
          bundle exec rake db:migrate
      - name: Restore NPMs
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ matrix.node-version }}-${{ hashFiles('package.json') }}
      - name: Prepare webpack
        if: github.event_name != 'push'
        run: |
          npm install
          bundle exec rake webpack:compile
      - name: Run plugin tests
        if: github.event_name != 'push'
        run: |
          bundle exec rake test:foreman_puppet_enc
      - name: Upload test.log
        uses: actions/upload-artifact@v2
        if: failure() && github.event_name != 'push'
        with:
          name: log
          path: log/test.log
